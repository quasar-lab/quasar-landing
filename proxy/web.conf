upstream landing {
    server landing:4000;
}

# force to https, not http.
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    return 301 https://$host$request_uri;
}

# force www to non-www examle.com
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name www.quasarprotocol.io;
    
    include /etc/nginx/server-https-common.conf;

    return 301 https://quasarprotocol.io$request_uri; 
}

# example no subdomain
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name quasarprotocol.io;

    include /etc/nginx/server-https-common.conf;
    
    location / {
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
        proxy_set_header    Host                $host;
        proxy_set_header    X-Forwarded-Host    $host;
        proxy_set_header    X-Forwarded-Port    $server_port;
        proxy_set_header    X-NginX-Proxy       true;
        proxy_pass_header   Set-Cookie;
        proxy_http_version  1.1;
        proxy_cache_bypass  $http_upgrade;
        proxy_pass http://landing/;
    }

    location ~ /.well-known/acme-challenge {
         allow all;
         root /var/www/certbot;
     }
}
